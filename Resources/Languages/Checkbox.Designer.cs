//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoTagNinja.Resources.Languages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Checkbox {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Checkbox() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GeoTagNinja.Resources.Languages.Checkbox", typeof(Checkbox).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add/Overwrite Sidecar XMP.
        /// </summary>
        public static string ckb_AddXMPSideCar {
            get {
                return ResourceManager.GetString("ckb_AddXMPSideCar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Un)Check All.
        /// </summary>
        public static string ckb_DeSelectAll {
            get {
                return ResourceManager.GetString("ckb_DeSelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do NOT do reverse geocoding (only get the coordinates, but not the City/state/etc).
        /// </summary>
        public static string ckb_DoNotQueryAPI {
            get {
                return ResourceManager.GetString("ckb_DoNotQueryAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include Altitude data in Export.
        /// </summary>
        public static string ckb_ExportTrackIncludeAltitude {
            get {
                return ResourceManager.GetString("ckb_ExportTrackIncludeAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CityRulesSettings.
        /// </summary>
        public static string ckb_ImportExport_CityRulesSettings {
            get {
                return ResourceManager.GetString("ckb_ImportExport_CityRulesSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include &quot;Predetermined&quot; countries? (see link above + caveat/warning).
        /// </summary>
        public static string ckb_IncludePredeterminedCountries {
            get {
                return ResourceManager.GetString("ckb_IncludePredeterminedCountries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay Track file onto Map.
        /// </summary>
        public static string ckb_LoadTrackOntoMap {
            get {
                return ResourceManager.GetString("ckb_LoadTrackOntoMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone Offset.
        /// </summary>
        public static string ckb_OffsetTime {
            get {
                return ResourceManager.GetString("ckb_OffsetTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only for dates that fall within the first &amp; last date of the selected files.
        /// </summary>
        public static string ckb_OverlayGPXForSelectedDatesOnly {
            get {
                return ResourceManager.GetString("ckb_OverlayGPXForSelectedDatesOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do NOT Make a xxx_original Backup.
        /// </summary>
        public static string ckb_OverwriteOriginal {
            get {
                return ResourceManager.GetString("ckb_OverwriteOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only display API data filtered to &quot;Populated places&quot; (fcode=PPL) [not recommended].
        /// </summary>
        public static string ckb_PopulatedPlacesOnly {
            get {
                return ResourceManager.GetString("ckb_PopulatedPlacesOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process the Image File itself.
        /// </summary>
        public static string ckb_ProcessOriginalFile {
            get {
                return ResourceManager.GetString("ckb_ProcessOriginalFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Processing further rows?.
        /// </summary>
        public static string ckb_QuestionStopProcessingRows {
            get {
                return ResourceManager.GetString("ckb_QuestionStopProcessingRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;Remove Geodata&quot; function also removes TimeZone Offset.
        /// </summary>
        public static string ckb_RemoveGeoDataRemovesTimeOffset {
            get {
                return ResourceManager.GetString("ckb_RemoveGeoDataRemovesTimeOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace blank City, State, Sublocation values with: .
        /// </summary>
        public static string ckb_ReplaceBlankToponyms {
            get {
                return ResourceManager.GetString("ckb_ReplaceBlankToponyms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Image File DateTime to CreateDate.
        /// </summary>
        public static string ckb_ResetFileDateToCreated {
            get {
                return ResourceManager.GetString("ckb_ResetFileDateToCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Map to 0/0 if no GeoData.
        /// </summary>
        public static string ckb_ResetMapToZero {
            get {
                return ResourceManager.GetString("ckb_ResetMapToZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop processing rules after first Country+Target match.
        /// </summary>
        public static string ckb_StopProcessingRules {
            get {
                return ResourceManager.GetString("ckb_StopProcessingRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Pre-release [beta] updates as well?.
        /// </summary>
        public static string ckb_UpdateCheckPreRelease {
            get {
                return ResourceManager.GetString("ckb_UpdateCheckPreRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Dark Mode in the App UI?.
        /// </summary>
        public static string ckb_UseDarkMode {
            get {
                return ResourceManager.GetString("ckb_UseDarkMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Imperial (Feet) for Altitude (rather than Metric [Metres]).
        /// </summary>
        public static string ckb_UseImperialNotMetric {
            get {
                return ResourceManager.GetString("ckb_UseImperialNotMetric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this Time Zone:.
        /// </summary>
        public static string ckb_UseTimeZone {
            get {
                return ResourceManager.GetString("ckb_UseTimeZone", resourceCulture);
            }
        }
    }
}
