<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ckb_ProcessOriginalFile" xml:space="preserve">
    <value>Process the Image File itself</value>
    <comment>Settings - Refers to whether the original image file should be processed (overwritten)</comment>
  </data>
  <data name="ckb_ResetFileDateToCreated" xml:space="preserve">
    <value>Reset Image File DateTime to CreateDate</value>
    <comment>Settings - Whether the image file's datetime should be aligned with the CreateDate in the Exif</comment>
  </data>
  <data name="ckb_AddXMPSideCar" xml:space="preserve">
    <value>Add/Overwrite Sidecar XMP</value>
    <comment>Settings - Whether the xmp file belonging to the image should be edited.</comment>
  </data>
  <data name="ckb_OverwriteOriginal" xml:space="preserve">
    <value>Do NOT Make a xxx_original Backup</value>
    <comment>Settings - Whether to overwrite the original file (rather than making a backup)</comment>
  </data>
  <data name="ckb_ResetMapToZero" xml:space="preserve">
    <value>Set Map to 0/0 if no GeoData</value>
    <comment>Settings - Whether to set the map to 0/0 coordinates if there is no geodata in the exif for the file</comment>
  </data>
  <data name="ckb_UseTimeZone" xml:space="preserve">
    <value>Use this Time Zone:</value>
    <comment>Import GPX - Specifies which time zone to use</comment>
  </data>
  <data name="ckb_OffsetTime" xml:space="preserve">
    <value>Time Zone Offset</value>
    <comment>Location: Paste Values</comment>
  </data>
  <data name="ckb_DeSelectAll" xml:space="preserve">
    <value>(Un)Check All</value>
    <comment>Location: Paste Values</comment>
  </data>
  <data name="ckb_RemoveGeoDataRemovesTimeOffset" xml:space="preserve">
    <value>The "Remove Geodata" function also removes TimeZone Offset</value>
    <comment>Settings - Whether to remove the time offset data when issuing a 'remove all geodata' command.</comment>
  </data>
  <data name="ckb_ReplaceBlankToponyms" xml:space="preserve">
    <value>Replace blank City, State, Sublocation values with: </value>
    <comment>Settings - Allows to preset a default value for blanks</comment>
  </data>
  <data name="ckb_IncludePredeterminedCountries" xml:space="preserve">
    <value>Include "Predetermined" countries? (see link above + caveat/warning)</value>
    <comment>Settings - This relates to overriding certain "predetermined" countries' logics when it comes to the API allocation of data. </comment>
  </data>
  <data name="ckb_StopProcessingRules" xml:space="preserve">
    <value>Stop processing rules after first Country+Target match</value>
    <comment>Settings - Means that if a value is "hit" by a rule then no more rules should be processed. </comment>
  </data>
  <data name="ckb_DoNotQueryAPI" xml:space="preserve">
    <value>Do NOT do reverse geocoding (only get the coordinates, but not the City/state/etc)</value>
    <comment>Location: Import/Export GPX</comment>
  </data>
  <data name="ckb_QuestionStopProcessingRows" xml:space="preserve">
    <value>Stop Processing further rows?</value>
    <comment>Location: Main Form</comment>
  </data>
  <data name="ckb_UseImperialNotMetric" xml:space="preserve">
    <value>Use Imperial (Feet) for Altitude (rather than Metric [Metres])</value>
    <comment>Location: Settings</comment>
  </data>
  <data name="ckb_UpdateCheckPreRelease" xml:space="preserve">
    <value>Check for Pre-release [beta] updates as well?</value>
    <comment>Location: Settings</comment>
  </data>
  <data name="ckb_UseDarkMode" xml:space="preserve">
    <value>Use Dark Mode in the App UI?</value>
    <comment>Location: Settings</comment>
  </data>
  <data name="ckb_ImportExport_CityRulesSettings" xml:space="preserve">
    <value>CityRulesSettings</value>
    <comment>Location: Settings</comment>
  </data>
  <data name="ckb_LoadTrackOntoMap" xml:space="preserve">
    <value>Overlay Track file onto Map</value>
    <comment>Location: Import/Export GPX</comment>
  </data>
  <data name="ckb_OverlayGPXForSelectedDatesOnly" xml:space="preserve">
    <value>Only for dates that fall within the first &amp; last date of the selected files</value>
    <comment>Location: Import/Export GPX</comment>
  </data>
  <data name="ckb_ExportTrackIncludeAltitude" xml:space="preserve">
    <value>Include Altitude data in Export</value>
    <comment>Location: Import/Export GPX</comment>
  </data>
  <data name="ckb_PopulatedPlacesOnly" xml:space="preserve">
    <value>Only display API data filtered to "Populated places" (fcode=PPL) [not recommended]</value>
    <comment>Settings - Whether the API should only return values of "populated places". This is an internal definition of the API</comment>
  </data>
</root>