//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoTagNinja.Resources.Languages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Label {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Label() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GeoTagNinja.Resources.Languages.Label", typeof(Label).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARCGIS API Key.
        /// </summary>
        public static string lbl_ARCGIS_APIKey {
            get {
                return ResourceManager.GetString("lbl_ARCGIS_APIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera Date/Time.
        /// </summary>
        public static string lbl_CameraTime {
            get {
                return ResourceManager.GetString("lbl_CameraTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: Time Shift is needed only when the image timestamps are not properly synchronized with GPS time. Leave as 0s unless required..
        /// </summary>
        public static string lbl_CameraTimeNote {
            get {
                return ResourceManager.GetString("lbl_CameraTimeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel Pressed. Folder parsing has stopped but files that have been collected will be parsed..
        /// </summary>
        public static string lbl_CancelPressed {
            get {
                return ResourceManager.GetString("lbl_CancelPressed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show this many toponym options.
        /// </summary>
        public static string lbl_ChoiceOfferCount {
            get {
                return ResourceManager.GetString("lbl_ChoiceOfferCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the Radius [kms].
        /// </summary>
        public static string lbl_ChoiceRadius {
            get {
                return ResourceManager.GetString("lbl_ChoiceRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort TrackPoints by.
        /// </summary>
        public static string lbl_ExportTrackOrderBy {
            get {
                return ResourceManager.GetString("lbl_ExportTrackOrderBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeStamp Value.
        /// </summary>
        public static string lbl_ExportTrackTimeStampType {
            get {
                return ResourceManager.GetString("lbl_ExportTrackTimeStampType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you select GPSDateTime and your file has no such attribute the export will fail. 
        ///Some HEIC files have this, most other formats don&apos;t..
        /// </summary>
        public static string lbl_ExportTrackTimeStampTypeNote {
            get {
                return ResourceManager.GetString("lbl_ExportTrackTimeStampTypeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max extrapolation (time diff between Taken TimeStamp and Trackpoint TS) time in seconds..
        /// </summary>
        public static string lbl_GeoMaxExtSecs {
            get {
                return ResourceManager.GetString("lbl_GeoMaxExtSecs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max interpolation (&apos;path guessing&apos;) time in seconds. Set to 0 to disable..
        /// </summary>
        public static string lbl_GeoMaxIntSecs {
            get {
                return ResourceManager.GetString("lbl_GeoMaxIntSecs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames Password.
        /// </summary>
        public static string lbl_GeoNames_Pwd {
            get {
                return ResourceManager.GetString("lbl_GeoNames_Pwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames Username.
        /// </summary>
        public static string lbl_GeoNames_UserName {
            get {
                return ResourceManager.GetString("lbl_GeoNames_UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;-- Click there set the Import Source Folder.
        /// </summary>
        public static string lbl_importFromAnotherFolder {
            get {
                return ResourceManager.GetString("lbl_importFromAnotherFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;-- Click there set the Import Source File.
        /// </summary>
        public static string lbl_importOneFile {
            get {
                return ResourceManager.GetString("lbl_importOneFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compare the timestamp in the Track Files against:.
        /// </summary>
        public static string lbl_ImportTimeAgainst {
            get {
                return ResourceManager.GetString("lbl_ImportTimeAgainst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string lbl_Language {
            get {
                return ResourceManager.GetString("lbl_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone.
        /// </summary>
        public static string lbl_OffsetTime {
            get {
                return ResourceManager.GetString("lbl_OffsetTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        public static string lbl_ParseProgress_Normal {
            get {
                return ResourceManager.GetString("lbl_ParseProgress_Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading:.
        /// </summary>
        public static string lbl_ParseProgress_Read {
            get {
                return ResourceManager.GetString("lbl_ParseProgress_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing:.
        /// </summary>
        public static string lbl_ParseProgress_Write {
            get {
                return ResourceManager.GetString("lbl_ParseProgress_Write", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing Files &amp;&amp; Folders, please wait. .
        /// </summary>
        public static string lbl_ParsingFolders {
            get {
                return ResourceManager.GetString("lbl_ParsingFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing Data:.
        /// </summary>
        public static string lbl_PleaseWaitBoxActionParsing {
            get {
                return ResourceManager.GetString("lbl_PleaseWaitBoxActionParsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning File:.
        /// </summary>
        public static string lbl_PleaseWaitBoxActionScanning {
            get {
                return ResourceManager.GetString("lbl_PleaseWaitBoxActionScanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press Cancel to stop..
        /// </summary>
        public static string lbl_PressCancelToStop {
            get {
                return ResourceManager.GetString("lbl_PressCancelToStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to also assign Altitude and Toponomy values?
        ///If you pick No, your lat/long data may become out of sync with any embedded toponomy data.
        ///If you click &apos;stop asking&apos; it will take the answer as Yes and won&apos;t ask again this session. Restart to reset..
        /// </summary>
        public static string lbl_QuestionAddToponomy {
            get {
                return ResourceManager.GetString("lbl_QuestionAddToponomy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Output To.
        /// </summary>
        public static string lbl_SaveTrackTo {
            get {
                return ResourceManager.GetString("lbl_SaveTrackTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Columns.
        /// </summary>
        public static string lbl_SelectColsTitle {
            get {
                return ResourceManager.GetString("lbl_SelectColsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift Track File Time by:.
        /// </summary>
        public static string lbl_ShiftTrackTimeBy {
            get {
                return ResourceManager.GetString("lbl_ShiftTrackTimeBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup Folder.
        /// </summary>
        public static string lbl_Startup_Folder {
            get {
                return ResourceManager.GetString("lbl_Startup_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: If the date/time tag does not include a timezone then one may be added (see below), otherwise the local system time is assumed..
        /// </summary>
        public static string lbl_TZNote {
            get {
                return ResourceManager.GetString("lbl_TZNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone Adjustment:.
        /// </summary>
        public static string lbl_TZTime {
            get {
                return ResourceManager.GetString("lbl_TZTime", resourceCulture);
            }
        }
    }
}
