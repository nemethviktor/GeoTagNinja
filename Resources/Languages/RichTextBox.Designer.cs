//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoTagNinja.Resources.Languages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RichTextBox {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RichTextBox() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GeoTagNinja.Resources.Languages.RichTextBox", typeof(RichTextBox).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an advanced feature. AdminName1-4 &amp; ToponymName refer to the API outputs so if you don&apos;t understand that, probably don&apos;t poke this at all. 
        ///For an overall rundown, check: https://github.com/nemethviktor/GeoTagNinja/issues/38#issuecomment-1356844255 .
        ///What this Setting does is that you can add your own choices of countries to get the &quot;City&quot; value from one of the specific AdminNames..
        /// </summary>
        public static string rbx_CustomCityLogicExplanation {
            get {
                return ResourceManager.GetString("rbx_CustomCityLogicExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that changes to the table below are immediately affected and the OK/Cancel button has no effect per se on them. You also need to right-click and click Reset Cached Data for any files that may be affected by your changes if you want to pull data within this session (or just restart the app.).
        /// </summary>
        public static string rbx_CustomCityLogicExplanationBold {
            get {
                return ResourceManager.GetString("rbx_CustomCityLogicExplanationBold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an advanced feature. AdminName1-4 &amp; ToponymName refer to the API outputs so if you don&apos;t understand that, probably don&apos;t poke this at all. 
        ///Re: &quot;Predetermined countries&quot; (checkbox below): Read about those here: https://github.com/nemethviktor/GeoTagNinja/issues/38#issuecomment-1356844255 + check the other tab - Note if you disable that setting it then will blank CountryCode cells that fall outside the relevant grouping but won&apos;t actually drop those rows.
        ///All columns are compulsory exc for &quot;Custom&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string rbx_CustomRulesExplanation {
            get {
                return ResourceManager.GetString("rbx_CustomRulesExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that changes to the table below are immediately affected and the OK/Cancel button has no effect per se on them. You also need to right-click and click Reset Cached Data for any files that may be affected by your changes if you want to pull data within this session (or just restart the app.).
        /// </summary>
        public static string rbx_CustomRulesExplanationBold {
            get {
                return ResourceManager.GetString("rbx_CustomRulesExplanationBold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ll need an ArcGIS API key to use the map search functionality. 
        ///ArcGIS have changed their registration process as of June 2024. Register [here](https://location.arcgis.com/sign-up/)
        ///You now need to specify a portal url. Just input anything you want.
        ///Scroll/Go to `Developer credential creator`
        ///Then `New Item`
        ///Then `Developer Credentials`
        ///Pick `API Key` (not OAUth)
        ///Set your expiration date to as far into the future as you can (1 year)
        ///Leave `Referrers` blank
        ///On the next page pick `Geocoding (not  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string rbx_Register_ArcGIS {
            get {
                return ResourceManager.GetString("rbx_Register_ArcGIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ll need a GeoNames Account to use the reverse geocoding/search function (lat/long --&gt; country/city/...). Get one here: http://www.geonames.org/login.
        /// </summary>
        public static string rbx_Register_GeoNames {
            get {
                return ResourceManager.GetString("rbx_Register_GeoNames", resourceCulture);
            }
        }
    }
}
