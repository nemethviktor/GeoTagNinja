//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoTagNinja.Resources.Languages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GeoTagNinja.Resources.Languages.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply &amp;&amp; Move to Next.
        /// </summary>
        public static string btn_ApplyAndNext {
            get {
                return ResourceManager.GetString("btn_ApplyAndNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use TakenDate.
        /// </summary>
        public static string btn_InsertFromTakenDate {
            get {
                return ResourceManager.GetString("btn_InsertFromTakenDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the &quot;latest&quot; Paste Settings.
        /// </summary>
        public static string btn_PullMostRecentPasteSettings {
            get {
                return ResourceManager.GetString("btn_PullMostRecentPasteSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get the &quot;latest&quot; Shift Settings.
        /// </summary>
        public static string btn_PullMostRecentTrackSyncShift {
            get {
                return ResourceManager.GetString("btn_PullMostRecentTrackSyncShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove GPS and Location data.
        /// </summary>
        public static string btn_RemoveGeoData {
            get {
                return ResourceManager.GetString("btn_RemoveGeoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset to Defaults.
        /// </summary>
        public static string btn_ResetToDefaults {
            get {
                return ResourceManager.GetString("btn_ResetToDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Later.
        /// </summary>
        public static string btn_RestartLater {
            get {
                return ResourceManager.GetString("btn_RestartLater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Now.
        /// </summary>
        public static string btn_RestartNow {
            get {
                return ResourceManager.GetString("btn_RestartNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set current values for all images selected for editing....
        /// </summary>
        public static string btn_SetCurrentValues {
            get {
                return ResourceManager.GetString("btn_SetCurrentValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add/Overwrite Sidecar XMP.
        /// </summary>
        public static string ckb_AddXMPSideCar {
            get {
                return ResourceManager.GetString("ckb_AddXMPSideCar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Un)Check All.
        /// </summary>
        public static string ckb_DeSelectAll {
            get {
                return ResourceManager.GetString("ckb_DeSelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do NOT do reverse geocoding (only get the coordinates, but not the City/state/etc).
        /// </summary>
        public static string ckb_DoNotQueryAPI {
            get {
                return ResourceManager.GetString("ckb_DoNotQueryAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include Altitude data in Export.
        /// </summary>
        public static string ckb_ExportTrackIncludeAltitude {
            get {
                return ResourceManager.GetString("ckb_ExportTrackIncludeAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ApplicationSettings.
        /// </summary>
        public static string ckb_ImportExport_ApplicationSettings {
            get {
                return ResourceManager.GetString("ckb_ImportExport_ApplicationSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CityRulesSettings.
        /// </summary>
        public static string ckb_ImportExport_CityRulesSettings {
            get {
                return ResourceManager.GetString("ckb_ImportExport_CityRulesSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CustomRulesSettings.
        /// </summary>
        public static string ckb_ImportExport_CustomRulesSettings {
            get {
                return ResourceManager.GetString("ckb_ImportExport_CustomRulesSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include &quot;Predetermined&quot; countries? (see link above + caveat/warning).
        /// </summary>
        public static string ckb_IncludePredeterminedCountries {
            get {
                return ResourceManager.GetString("ckb_IncludePredeterminedCountries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overlay Track file onto Map.
        /// </summary>
        public static string ckb_LoadTrackOntoMap {
            get {
                return ResourceManager.GetString("ckb_LoadTrackOntoMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone Offset.
        /// </summary>
        public static string ckb_OffsetTime {
            get {
                return ResourceManager.GetString("ckb_OffsetTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only for dates that fall within the first &amp; last date of the selected files.
        /// </summary>
        public static string ckb_OverlayGPXForSelectedDatesOnly {
            get {
                return ResourceManager.GetString("ckb_OverlayGPXForSelectedDatesOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do NOT Make a xxx_original Backup.
        /// </summary>
        public static string ckb_OverwriteOriginal {
            get {
                return ResourceManager.GetString("ckb_OverwriteOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only display API data filtered to &quot;Populated places&quot; (fcode=PPL) [not recommended].
        /// </summary>
        public static string ckb_PopulatedPlacesOnly {
            get {
                return ResourceManager.GetString("ckb_PopulatedPlacesOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process the Image File itself.
        /// </summary>
        public static string ckb_ProcessOriginalFile {
            get {
                return ResourceManager.GetString("ckb_ProcessOriginalFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Processing further rows?.
        /// </summary>
        public static string ckb_QuestionStopProcessingRows {
            get {
                return ResourceManager.GetString("ckb_QuestionStopProcessingRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;Remove Geodata&quot; function also removes TimeZone Offset.
        /// </summary>
        public static string ckb_RemoveGeoDataRemovesTimeOffset {
            get {
                return ResourceManager.GetString("ckb_RemoveGeoDataRemovesTimeOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace blank City, State, Sublocation values with: .
        /// </summary>
        public static string ckb_ReplaceBlankToponyms {
            get {
                return ResourceManager.GetString("ckb_ReplaceBlankToponyms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Image File DateTime to CreateDate.
        /// </summary>
        public static string ckb_ResetFileDateToCreated {
            get {
                return ResourceManager.GetString("ckb_ResetFileDateToCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Map to 0/0 if no GeoData.
        /// </summary>
        public static string ckb_ResetMapToZero {
            get {
                return ResourceManager.GetString("ckb_ResetMapToZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop processing rules after first Country+Target match.
        /// </summary>
        public static string ckb_StopProcessingRules {
            get {
                return ResourceManager.GetString("ckb_StopProcessingRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Pre-release [beta] updates as well?.
        /// </summary>
        public static string ckb_UpdateCheckPreRelease {
            get {
                return ResourceManager.GetString("ckb_UpdateCheckPreRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Dark Mode in the App UI?.
        /// </summary>
        public static string ckb_UseDarkMode {
            get {
                return ResourceManager.GetString("ckb_UseDarkMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Imperial (Feet) for Altitude (rather than Metric [Metres]).
        /// </summary>
        public static string ckb_UseImperialNotMetric {
            get {
                return ResourceManager.GetString("ckb_UseImperialNotMetric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this Time Zone:.
        /// </summary>
        public static string ckb_UseTimeZone {
            get {
                return ResourceManager.GetString("ckb_UseTimeZone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blank out?.
        /// </summary>
        public static string clh_BlankOutTargetPoint {
            get {
                return ResourceManager.GetString("clh_BlankOutTargetPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If.
        /// </summary>
        public static string clh_DataPointConditionType {
            get {
                return ResourceManager.GetString("clh_DataPointConditionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string clh_DataPointConditionValue {
            get {
                return ResourceManager.GetString("clh_DataPointConditionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What.
        /// </summary>
        public static string clh_DataPointName {
            get {
                return ResourceManager.GetString("clh_DataPointName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exif (GTN Internal) Tag.
        /// </summary>
        public static string clh_ExifTag {
            get {
                return ResourceManager.GetString("clh_ExifTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder.
        /// </summary>
        public static string clh_Folder {
            get {
                return ResourceManager.GetString("clh_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modified (Unsaved) Value.
        /// </summary>
        public static string clh_ModifiedValue {
            get {
                return ResourceManager.GetString("clh_ModifiedValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original (Saved) Value.
        /// </summary>
        public static string clh_OriginalValue {
            get {
                return ResourceManager.GetString("clh_OriginalValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Then.
        /// </summary>
        public static string clh_TargetPointName {
            get {
                return ResourceManager.GetString("clh_TargetPointName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reads city from.
        /// </summary>
        public static string clh_TargetPointNameCustomCityLogic {
            get {
                return ResourceManager.GetString("clh_TargetPointNameCustomCityLogic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Becomes.
        /// </summary>
        public static string clh_TargetPointOutcome {
            get {
                return ResourceManager.GetString("clh_TargetPointOutcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Outcome.
        /// </summary>
        public static string clh_TargetPointOutcomeCustom {
            get {
                return ResourceManager.GetString("clh_TargetPointOutcomeCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Coordinates in API.
        /// </summary>
        public static string cmi_OpenCoordsInAPI {
            get {
                return ResourceManager.GetString("cmi_OpenCoordsInAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Coordinates in Browser/Maps.
        /// </summary>
        public static string cmi_OpenCoordsInBrowser {
            get {
                return ResourceManager.GetString("cmi_OpenCoordsInBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bing.
        /// </summary>
        public static string cmi_OpenCoordsInBrowserBing {
            get {
                return ResourceManager.GetString("cmi_OpenCoordsInBrowserBing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames (Maps).
        /// </summary>
        public static string cmi_OpenCoordsInBrowserGeoNamesMaps {
            get {
                return ResourceManager.GetString("cmi_OpenCoordsInBrowserGeoNamesMaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Google Maps.
        /// </summary>
        public static string cmi_OpenCoordsInBrowserGoogle {
            get {
                return ResourceManager.GetString("cmi_OpenCoordsInBrowserGoogle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenStreetMap.
        /// </summary>
        public static string cmi_OpenCoordsInBrowserOpenStreetMap {
            get {
                return ResourceManager.GetString("cmi_OpenCoordsInBrowserOpenStreetMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WeGo/Here.
        /// </summary>
        public static string cmi_OpenCoordsInBrowserWeGoHere {
            get {
                return ResourceManager.GetString("cmi_OpenCoordsInBrowserWeGoHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Cached Data.
        /// </summary>
        public static string cmi_removeCachedData {
            get {
                return ResourceManager.GetString("cmi_removeCachedData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show or Hide Columns.
        /// </summary>
        public static string cmi_ShowHideCols {
            get {
                return ResourceManager.GetString("cmi_ShowHideCols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for Startup Folder.
        /// </summary>
        public static string fbd_StartupFolder {
            get {
                return ResourceManager.GetString("fbd_StartupFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Data.
        /// </summary>
        public static string frm_FrmEditFileData {
            get {
                return ResourceManager.GetString("frm_FrmEditFileData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import GPX/JSON Data.
        /// </summary>
        public static string frm_FrmImportExportGpx {
            get {
                return ResourceManager.GetString("frm_FrmImportExportGpx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Favourites.
        /// </summary>
        public static string frm_FrmManageFavourites {
            get {
                return ResourceManager.GetString("frm_FrmManageFavourites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste…What?.
        /// </summary>
        public static string frm_FrmPasteWhat {
            get {
                return ResourceManager.GetString("frm_FrmPasteWhat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Toponymy Values.
        /// </summary>
        public static string frm_FrmPickDataFromAPIBox {
            get {
                return ResourceManager.GetString("frm_FrmPickDataFromAPIBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while the folder loads..
        /// </summary>
        public static string frm_FrmPleaseWaitBox {
            get {
                return ResourceManager.GetString("frm_FrmPleaseWaitBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string frm_FrmSettings {
            get {
                return ResourceManager.GetString("frm_FrmSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Settings.
        /// </summary>
        public static string gbx_AppSettings {
            get {
                return ResourceManager.GetString("gbx_AppSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created Date.
        /// </summary>
        public static string gbx_CreateDate {
            get {
                return ResourceManager.GetString("gbx_CreateDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dates.
        /// </summary>
        public static string gbx_Dates {
            get {
                return ResourceManager.GetString("gbx_Dates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images selected for editing.
        /// </summary>
        public static string gbx_EditImageList {
            get {
                return ResourceManager.GetString("gbx_EditImageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames Language Settings.
        /// </summary>
        public static string gbx_GeoNamesLanguageSettings {
            get {
                return ResourceManager.GetString("gbx_GeoNamesLanguageSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames Settings.
        /// </summary>
        public static string gbx_GeoNamesSettings {
            get {
                return ResourceManager.GetString("gbx_GeoNamesSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Altitude data.
        /// </summary>
        public static string gbx_GetAltitude {
            get {
                return ResourceManager.GetString("gbx_GetAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Toponomy data.
        /// </summary>
        public static string gbx_GetToponomy {
            get {
                return ResourceManager.GetString("gbx_GetToponomy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPS Data.
        /// </summary>
        public static string gbx_GPSData {
            get {
                return ResourceManager.GetString("gbx_GPSData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        public static string gbx_ImportExportGpxSource {
            get {
                return ResourceManager.GetString("gbx_ImportExportGpxSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Setting.
        /// </summary>
        public static string gbx_ImportExportGpxTimeSetting {
            get {
                return ResourceManager.GetString("gbx_ImportExportGpxTimeSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location Data.
        /// </summary>
        public static string gbx_LocationData {
            get {
                return ResourceManager.GetString("gbx_LocationData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map Colour Mode.
        /// </summary>
        public static string gbx_MapColourMode {
            get {
                return ResourceManager.GetString("gbx_MapColourMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other Settings.
        /// </summary>
        public static string gbx_OtherSettings {
            get {
                return ResourceManager.GetString("gbx_OtherSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Track (Options).
        /// </summary>
        public static string gbx_SaveTrackTo {
            get {
                return ResourceManager.GetString("gbx_SaveTrackTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date (Image) Taken.
        /// </summary>
        public static string gbx_TakenDate {
            get {
                return ResourceManager.GetString("gbx_TakenDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string Generic_All {
            get {
                return ResourceManager.GetString("Generic_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Generic_Cancel {
            get {
                return ResourceManager.GetString("Generic_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to City.
        /// </summary>
        public static string Generic_City {
            get {
                return ResourceManager.GetString("Generic_City", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Generic_Close {
            get {
                return ResourceManager.GetString("Generic_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Coordinates.
        /// </summary>
        public static string Generic_Coordinates {
            get {
                return ResourceManager.GetString("Generic_Coordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country.
        /// </summary>
        public static string Generic_Country {
            get {
                return ResourceManager.GetString("Generic_Country", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country Code.
        /// </summary>
        public static string Generic_CountryCode {
            get {
                return ResourceManager.GetString("Generic_CountryCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Date.
        /// </summary>
        public static string Generic_CreateDate {
            get {
                return ResourceManager.GetString("Generic_CreateDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days.
        /// </summary>
        public static string Generic_Days {
            get {
                return ResourceManager.GetString("Generic_Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decimal.
        /// </summary>
        public static string Generic_Decimal {
            get {
                return ResourceManager.GetString("Generic_Decimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Generic_Delete {
            get {
                return ResourceManager.GetString("Generic_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dest Coordinates.
        /// </summary>
        public static string Generic_DestCoordinates {
            get {
                return ResourceManager.GetString("Generic_DestCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance.
        /// </summary>
        public static string Generic_Distance {
            get {
                return ResourceManager.GetString("Generic_Distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Generic_Export {
            get {
                return ResourceManager.GetString("Generic_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeStamp Value.
        /// </summary>
        public static string Generic_ExportTrackTimeStampType {
            get {
                return ResourceManager.GetString("Generic_ExportTrackTimeStampType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exposure Time.
        /// </summary>
        public static string Generic_ExposureTime {
            get {
                return ResourceManager.GetString("Generic_ExposureTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Favourites.
        /// </summary>
        public static string Generic_Favourites {
            get {
                return ResourceManager.GetString("Generic_Favourites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feet.
        /// </summary>
        public static string Generic_Feet {
            get {
                return ResourceManager.GetString("Generic_Feet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ft.
        /// </summary>
        public static string Generic_Feet_Abbr {
            get {
                return ResourceManager.GetString("Generic_Feet_Abbr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Date.
        /// </summary>
        public static string Generic_FileModifyDate {
            get {
                return ResourceManager.GetString("Generic_FileModifyDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name.
        /// </summary>
        public static string Generic_FileName {
            get {
                return ResourceManager.GetString("Generic_FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aperture.
        /// </summary>
        public static string Generic_Fnumber {
            get {
                return ResourceManager.GetString("Generic_Fnumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focal Length.
        /// </summary>
        public static string Generic_FocalLength {
            get {
                return ResourceManager.GetString("Generic_FocalLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Focal Length (35mm).
        /// </summary>
        public static string Generic_FocalLengthIn35mmFormat {
            get {
                return ResourceManager.GetString("Generic_FocalLengthIn35mmFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For All Images.
        /// </summary>
        public static string Generic_ForAllImages {
            get {
                return ResourceManager.GetString("Generic_ForAllImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For This Image.
        /// </summary>
        public static string Generic_ForThisImage {
            get {
                return ResourceManager.GetString("Generic_ForThisImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Altitude.
        /// </summary>
        public static string Generic_GPSAltitude {
            get {
                return ResourceManager.GetString("Generic_GPSAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Altitude Ref.
        /// </summary>
        public static string Generic_GPSAltitudeRef {
            get {
                return ResourceManager.GetString("Generic_GPSAltitudeRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPS DateTime.
        /// </summary>
        public static string Generic_GPSDateTime {
            get {
                return ResourceManager.GetString("Generic_GPSDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dest Latitude.
        /// </summary>
        public static string Generic_GPSDestLatitude {
            get {
                return ResourceManager.GetString("Generic_GPSDestLatitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dest Latitude Ref.
        /// </summary>
        public static string Generic_GPSDestLatitudeRef {
            get {
                return ResourceManager.GetString("Generic_GPSDestLatitudeRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dest Longitude.
        /// </summary>
        public static string Generic_GPSDestLongitude {
            get {
                return ResourceManager.GetString("Generic_GPSDestLongitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dest Longitude Ref.
        /// </summary>
        public static string Generic_GPSDestLongitudeRef {
            get {
                return ResourceManager.GetString("Generic_GPSDestLongitudeRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Img Direction.
        /// </summary>
        public static string Generic_GPSImgDirection {
            get {
                return ResourceManager.GetString("Generic_GPSImgDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Img Direction Ref.
        /// </summary>
        public static string Generic_GPSImgDirectionRef {
            get {
                return ResourceManager.GetString("Generic_GPSImgDirectionRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latitude.
        /// </summary>
        public static string Generic_GPSLatitude {
            get {
                return ResourceManager.GetString("Generic_GPSLatitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latitude Ref.
        /// </summary>
        public static string Generic_GPSLatitudeRef {
            get {
                return ResourceManager.GetString("Generic_GPSLatitudeRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Longitude.
        /// </summary>
        public static string Generic_GPSLongitude {
            get {
                return ResourceManager.GetString("Generic_GPSLongitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Longitude Ref.
        /// </summary>
        public static string Generic_GPSLongitudeRef {
            get {
                return ResourceManager.GetString("Generic_GPSLongitudeRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speed.
        /// </summary>
        public static string Generic_GPSSpeed {
            get {
                return ResourceManager.GetString("Generic_GPSSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speed Ref.
        /// </summary>
        public static string Generic_GPSSpeedRef {
            get {
                return ResourceManager.GetString("Generic_GPSSpeedRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GUID.
        /// </summary>
        public static string Generic_GUID {
            get {
                return ResourceManager.GetString("Generic_GUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hours.
        /// </summary>
        public static string Generic_Hours {
            get {
                return ResourceManager.GetString("Generic_Hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Generic_Import {
            get {
                return ResourceManager.GetString("Generic_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert.
        /// </summary>
        public static string Generic_Insert {
            get {
                return ResourceManager.GetString("Generic_Insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPTC Keywords.
        /// </summary>
        public static string Generic_IPTCKeywords {
            get {
                return ResourceManager.GetString("Generic_IPTCKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ISO Speed.
        /// </summary>
        public static string Generic_ISO {
            get {
                return ResourceManager.GetString("Generic_ISO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lens.
        /// </summary>
        public static string Generic_LensSpec {
            get {
                return ResourceManager.GetString("Generic_LensSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make.
        /// </summary>
        public static string Generic_Make {
            get {
                return ResourceManager.GetString("Generic_Make", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metres.
        /// </summary>
        public static string Generic_Metres {
            get {
                return ResourceManager.GetString("Generic_Metres", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to m.
        /// </summary>
        public static string Generic_Metres_Abbr {
            get {
                return ResourceManager.GetString("Generic_Metres_Abbr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miles.
        /// </summary>
        public static string Generic_Miles {
            get {
                return ResourceManager.GetString("Generic_Miles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minutes.
        /// </summary>
        public static string Generic_Minutes {
            get {
                return ResourceManager.GetString("Generic_Minutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model.
        /// </summary>
        public static string Generic_Model {
            get {
                return ResourceManager.GetString("Generic_Model", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string Generic_No {
            get {
                return ResourceManager.GetString("Generic_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string Generic_None {
            get {
                return ResourceManager.GetString("Generic_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone Offset.
        /// </summary>
        public static string Generic_OffsetTime {
            get {
                return ResourceManager.GetString("Generic_OffsetTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        public static string Generic_OK {
            get {
                return ResourceManager.GetString("Generic_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pls wait....
        /// </summary>
        public static string Generic_PleaseWait {
            get {
                return ResourceManager.GetString("Generic_PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t Ask again.
        /// </summary>
        public static string Generic_QuestionDontAskAgain {
            get {
                return ResourceManager.GetString("Generic_QuestionDontAskAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rating.
        /// </summary>
        public static string Generic_Rating {
            get {
                return ResourceManager.GetString("Generic_Rating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename.
        /// </summary>
        public static string Generic_Rename {
            get {
                return ResourceManager.GetString("Generic_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save the Current Changes.
        /// </summary>
        public static string Generic_Save {
            get {
                return ResourceManager.GetString("Generic_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secs.
        /// </summary>
        public static string Generic_Seconds {
            get {
                return ResourceManager.GetString("Generic_Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Password.
        /// </summary>
        public static string Generic_ShowPassword {
            get {
                return ResourceManager.GetString("Generic_ShowPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State/Province.
        /// </summary>
        public static string Generic_State {
            get {
                return ResourceManager.GetString("Generic_State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sublocation.
        /// </summary>
        public static string Generic_Sublocation {
            get {
                return ResourceManager.GetString("Generic_Sublocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Taken Date.
        /// </summary>
        public static string Generic_TakenDate {
            get {
                return ResourceManager.GetString("Generic_TakenDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone ID.
        /// </summary>
        public static string Generic_TimeZoneID {
            get {
                return ResourceManager.GetString("Generic_TimeZoneID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone Adjustment:.
        /// </summary>
        public static string Generic_TZTime {
            get {
                return ResourceManager.GetString("Generic_TZTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use DST?.
        /// </summary>
        public static string Generic_UseDST {
            get {
                return ResourceManager.GetString("Generic_UseDST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML Subjects.
        /// </summary>
        public static string Generic_XMLSubjects {
            get {
                return ResourceManager.GetString("Generic_XMLSubjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Generic_Yes {
            get {
                return ResourceManager.GetString("Generic_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ARCGIS API Key.
        /// </summary>
        public static string lbl_ARCGIS_APIKey {
            get {
                return ResourceManager.GetString("lbl_ARCGIS_APIKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera Date/Time.
        /// </summary>
        public static string lbl_CameraTime {
            get {
                return ResourceManager.GetString("lbl_CameraTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: Time Shift is needed only when the image timestamps are not properly synchronized with GPS time. Leave as 0s unless required..
        /// </summary>
        public static string lbl_CameraTimeNote {
            get {
                return ResourceManager.GetString("lbl_CameraTimeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel Pressed. Folder parsing has stopped but files that have been collected will be parsed..
        /// </summary>
        public static string lbl_CancelPressed {
            get {
                return ResourceManager.GetString("lbl_CancelPressed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show this many toponym options.
        /// </summary>
        public static string lbl_ChoiceOfferCount {
            get {
                return ResourceManager.GetString("lbl_ChoiceOfferCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the Radius [kms].
        /// </summary>
        public static string lbl_ChoiceRadius {
            get {
                return ResourceManager.GetString("lbl_ChoiceRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort TrackPoints by.
        /// </summary>
        public static string lbl_ExportTrackOrderBy {
            get {
                return ResourceManager.GetString("lbl_ExportTrackOrderBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeStamp Value.
        /// </summary>
        public static string lbl_ExportTrackTimeStampType {
            get {
                return ResourceManager.GetString("lbl_ExportTrackTimeStampType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you select GPSDateTime and your file has no such attribute the export will fail. 
        ///Some HEIC files have this, most other formats don&apos;t..
        /// </summary>
        public static string lbl_ExportTrackTimeStampTypeNote {
            get {
                return ResourceManager.GetString("lbl_ExportTrackTimeStampTypeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max extrapolation (time diff between Taken TimeStamp and Trackpoint TS) time in seconds..
        /// </summary>
        public static string lbl_GeoMaxExtSecs {
            get {
                return ResourceManager.GetString("lbl_GeoMaxExtSecs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max interpolation (&apos;path guessing&apos;) time in seconds. Set to 0 to disable..
        /// </summary>
        public static string lbl_GeoMaxIntSecs {
            get {
                return ResourceManager.GetString("lbl_GeoMaxIntSecs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames Password.
        /// </summary>
        public static string lbl_GeoNames_Pwd {
            get {
                return ResourceManager.GetString("lbl_GeoNames_Pwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames Username.
        /// </summary>
        public static string lbl_GeoNames_UserName {
            get {
                return ResourceManager.GetString("lbl_GeoNames_UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;-- Click there set the Import Source Folder.
        /// </summary>
        public static string lbl_importFromAnotherFolder {
            get {
                return ResourceManager.GetString("lbl_importFromAnotherFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;-- Click there set the Import Source File.
        /// </summary>
        public static string lbl_importOneFile {
            get {
                return ResourceManager.GetString("lbl_importOneFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compare the timestamp in the Track Files against:.
        /// </summary>
        public static string lbl_ImportTimeAgainst {
            get {
                return ResourceManager.GetString("lbl_ImportTimeAgainst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string lbl_Language {
            get {
                return ResourceManager.GetString("lbl_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone.
        /// </summary>
        public static string lbl_OffsetTime {
            get {
                return ResourceManager.GetString("lbl_OffsetTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        public static string lbl_ParseProgress_Normal {
            get {
                return ResourceManager.GetString("lbl_ParseProgress_Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading:.
        /// </summary>
        public static string lbl_ParseProgress_Read {
            get {
                return ResourceManager.GetString("lbl_ParseProgress_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing:.
        /// </summary>
        public static string lbl_ParseProgress_Write {
            get {
                return ResourceManager.GetString("lbl_ParseProgress_Write", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing Files &amp;&amp; Folders, please wait. .
        /// </summary>
        public static string lbl_ParsingFolders {
            get {
                return ResourceManager.GetString("lbl_ParsingFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing Data:.
        /// </summary>
        public static string lbl_PleaseWaitBoxActionParsing {
            get {
                return ResourceManager.GetString("lbl_PleaseWaitBoxActionParsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Populating the main Grid (ListView).
        /// </summary>
        public static string lbl_PleaseWaitBoxActionPopulatingListView {
            get {
                return ResourceManager.GetString("lbl_PleaseWaitBoxActionPopulatingListView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning File:.
        /// </summary>
        public static string lbl_PleaseWaitBoxActionScanning {
            get {
                return ResourceManager.GetString("lbl_PleaseWaitBoxActionScanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press Cancel to stop..
        /// </summary>
        public static string lbl_PressCancelToStop {
            get {
                return ResourceManager.GetString("lbl_PressCancelToStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to also assign Altitude and Toponomy values?
        ///If you pick No, your lat/long data may become out of sync with any embedded toponomy data.
        ///If you click &apos;stop asking&apos; it will take the answer as Yes and won&apos;t ask again this session. Restart to reset..
        /// </summary>
        public static string lbl_QuestionAddToponomy {
            get {
                return ResourceManager.GetString("lbl_QuestionAddToponomy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Output To.
        /// </summary>
        public static string lbl_SaveTrackTo {
            get {
                return ResourceManager.GetString("lbl_SaveTrackTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Columns.
        /// </summary>
        public static string lbl_SelectColsTitle {
            get {
                return ResourceManager.GetString("lbl_SelectColsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift Track File Time by:.
        /// </summary>
        public static string lbl_ShiftTrackTimeBy {
            get {
                return ResourceManager.GetString("lbl_ShiftTrackTimeBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup Folder.
        /// </summary>
        public static string lbl_Startup_Folder {
            get {
                return ResourceManager.GetString("lbl_Startup_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: If the date/time tag does not include a timezone then one may be added (see below), otherwise the local system time is assumed..
        /// </summary>
        public static string lbl_TZNote {
            get {
                return ResourceManager.GetString("lbl_TZNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zone Adjustment:.
        /// </summary>
        public static string lbl_TZTime {
            get {
                return ResourceManager.GetString("lbl_TZTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string mbc_Error {
            get {
                return ResourceManager.GetString("mbc_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        public static string mbc_Information {
            get {
                return ResourceManager.GetString("mbc_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Question.
        /// </summary>
        public static string mbc_Question {
            get {
                return ResourceManager.GetString("mbc_Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string mbc_Warning {
            get {
                return ResourceManager.GetString("mbc_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while parsing folder to DirectoryElements.
        /// </summary>
        public static string mbx_DirectoryElementCollection_ErrorParsing {
            get {
                return ResourceManager.GetString("mbx_DirectoryElementCollection_ErrorParsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The app encountered errors communicating with the API. If you got an Unauthorised error, pls set your username as password in the settings..
        /// </summary>
        public static string mbx_FrmEditFileData_ErrorAPIError {
            get {
                return ResourceManager.GetString("mbx_FrmEditFileData_ErrorAPIError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will be a bug.  Please file an issue on github and that the &apos;sender&apos; was: .
        /// </summary>
        public static string mbx_FrmEditFileData_ErrorInvalidSender {
            get {
                return ResourceManager.GetString("mbx_FrmEditFileData_ErrorInvalidSender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Updated..
        /// </summary>
        public static string mbx_FrmEditFileData_InfoDataUpdated {
            get {
                return ResourceManager.GetString("mbx_FrmEditFileData_InfoDataUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your files seem to have disappeared..
        /// </summary>
        public static string mbx_FrmEditFileData_WarningFileDisappeared {
            get {
                return ResourceManager.GetString("mbx_FrmEditFileData_WarningFileDisappeared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This needs to have numbers only. Will default to zero..
        /// </summary>
        public static string mbx_FrmEditFileData_WarningLatLongMustBeNumbers {
            get {
                return ResourceManager.GetString("mbx_FrmEditFileData_WarningLatLongMustBeNumbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to see the report on the import process?.
        /// </summary>
        public static string mbx_FrmImportExportGpx_AskUserWantsReport {
            get {
                return ResourceManager.GetString("mbx_FrmImportExportGpx_AskUserWantsReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file or folder you picked is invalid..
        /// </summary>
        public static string mbx_FrmImportExportGpx_FileOrFolderDoesntExist {
            get {
                return ResourceManager.GetString("mbx_FrmImportExportGpx_FileOrFolderDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files have been selected to import for..
        /// </summary>
        public static string mbx_FrmImportExportGpx_NoFileSelected {
            get {
                return ResourceManager.GetString("mbx_FrmImportExportGpx_NoFileSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to import Track overlay - found no relevant-looking data..
        /// </summary>
        public static string mbx_FrmImportExportGpx_TrackContainsNoData {
            get {
                return ResourceManager.GetString("mbx_FrmImportExportGpx_TrackContainsNoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No &quot;shift&quot; values stored. Data will remain 0..
        /// </summary>
        public static string mbx_FrmImportNoStoredShiftValues {
            get {
                return ResourceManager.GetString("mbx_FrmImportNoStoredShiftValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create SQLite database (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorCantCreateSQLiteDB {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorCantCreateSQLiteDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading data from SQL Failed (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorCantLoadSQLiteDB {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorCantLoadSQLiteDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading webview2 - Have you installed it?.
        /// </summary>
        public static string mbx_FrmMainApp_ErrorCantLoadWebView2 {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorCantLoadWebView2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read default values from SQL (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorCantReadDefaultSQLiteDB {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorCantReadDefaultSQLiteDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created but can&apos;t write SQLite database (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorCantWriteSQLiteDB {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorCantWriteSQLiteDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error clearing the filedata-Q tables (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorClearingFileDataQTables {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorClearingFileDataQTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DoubleBuffer Error (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorDoubleBuffer {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorDoubleBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File no longer appears to exist: .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorFileGoneMissing {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorFileGoneMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during importing GeoSetter Favourites..
        /// </summary>
        public static string mbx_FrmMainApp_ErrorImportGeoSetterFavourites {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorImportGeoSetterFavourites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in FrmMainApp.InitializeComponent (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInitializeComponent {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInitializeComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in FrmMainApp.InitialiseWebView (await wbv_MapArea.EnsureCoreWebView2Async(c2wv)) (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInitializeWebViewEnsureCoreWebView2Async {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInitializeWebViewEnsureCoreWebView2Async", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in FrmMainApp.InitialiseWebView (IsWebMessageEnabled) (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInitializeWebViewIsWebMessageEnabled {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInitializeWebViewIsWebMessageEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in FrmMainApp.InitialiseWebView (NavigateToString in HTMLCode file) (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInitializeWebViewNavigateToStringInHTMLFile {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInitializeWebViewNavigateToStringInHTMLFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in FrmMainApp.InitialiseWebView (parsing coordinates from HTMLCode file) (Please file an issue on github): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInitializeWebViewParseCoordsFromHTMLFile {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInitializeWebViewParseCoordsFromHTMLFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in FrmMainApp.InitialiseWebView (reading HTMLCode file) (Please file an issue on github): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInitializeWebViewReadHTMLFile {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInitializeWebViewReadHTMLFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in FrmMainApp.InitialiseWebView (replacing constants in HTMLCode file) (Please file an issue on github): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInitializeWebViewReplaceStringInHTMLFile {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInitializeWebViewReplaceStringInHTMLFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while performing  wbv_MapArea_WebMessageReceived (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInitializeWebViewWebMessageReceived {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInitializeWebViewWebMessageReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you entered doesn&apos;t seem valid. Revert to C:\?.
        /// </summary>
        public static string mbx_FrmMainApp_ErrorInvalidFolder {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorInvalidFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file isoCountryCodeMapping.csv is missing from the Resources folder. Without it the app can&apos;t load..
        /// </summary>
        public static string mbx_FrmMainApp_ErrorIsoCountryCodeMappingMissing {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorIsoCountryCodeMappingMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error reading the language file and assigning columnheaders (Please file an issue on github): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorLanguageFileColumnHeaders {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorLanguageFileColumnHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in FrmMainApp.NavigateMapGo (string HTMLCode) (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorNavigateMapGoHTMLCode {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorNavigateMapGoHTMLCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove GeoData process has failed/returned an error..
        /// </summary>
        public static string mbx_FrmMainApp_ErrorRemoveGeoDataFailed {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorRemoveGeoDataFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resizing Columns failed (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorResizingColumns {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorResizingColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting Default Startup folder failed (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_FrmMainApp_ErrorSettingStartupFolder {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_ErrorSettingStartupFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No data has been removed. Either you didn&apos;t select valid items or the ones you picked didn&apos;t have cached data..
        /// </summary>
        public static string mbx_FrmMainApp_InfoCachedDataNotRemoved {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_InfoCachedDataNotRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If there was any, cached data for selected items has been removed..
        /// </summary>
        public static string mbx_FrmMainApp_InfoCachedDataRemoved {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_InfoCachedDataRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot be empty/blank.
        /// </summary>
        public static string mbx_FrmMainApp_InfoFavouriteNameCannotBeBlank {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_InfoFavouriteNameCannotBeBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The saved item you selected isn&apos;t valid.
        /// </summary>
        public static string mbx_FrmMainApp_InfoFavouriteNotValid {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_InfoFavouriteNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Favourite saved OK.
        /// </summary>
        public static string mbx_FrmMainApp_InfoFavouriteSaved {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_InfoFavouriteSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoSetter Favourites imported. Items imported: .
        /// </summary>
        public static string mbx_FrmMainApp_InfoImportGeoSetterFavouritesDone {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_InfoImportGeoSetterFavouritesDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have no Favourites defined. Add one using the buttons under the map..
        /// </summary>
        public static string mbx_FrmMainApp_NoFavouritesDefined {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_NoFavouritesDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to assign the coordinates to the selected file(s)?.
        /// </summary>
        public static string mbx_FrmMainApp_QuestionAddDraggedDataPointToFiles {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_QuestionAddDraggedDataPointToFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flat Mode is turned on. Do you want to turn it off?.
        /// </summary>
        public static string mbx_FrmMainApp_QuestionDisableFlatMode {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_QuestionDisableFlatMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API query didn&apos;t return any valid information. Do you want to blank out the toponomy values?.
        /// </summary>
        public static string mbx_FrmMainApp_QuestionNoRowsFromAPI {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_QuestionNoRowsFromAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running Track Import/Export while in Flat Mode is a bad idea because track interactions use special logic that can&apos;t differentiate between possible identically named files across folders. Are you sure you want to run this?.
        /// </summary>
        public static string mbx_FrmMainApp_QuestionRunImportExportInFlatMode {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_QuestionRunImportExportInFlatMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: the following sidecar files share names with multiple image files - data may have been misread:.
        /// </summary>
        public static string mbx_FrmMainApp_WarningMultipleImageFilesForXMP {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_WarningMultipleImageFilesForXMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Item selected..
        /// </summary>
        public static string mbx_FrmMainApp_WarningNoItemSelected {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_WarningNoItemSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precisely 1 file must be selected..
        /// </summary>
        public static string mbx_FrmMainApp_WarningTooManyFilesSelected {
            get {
                return ResourceManager.GetString("mbx_FrmMainApp_WarningTooManyFilesSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No values specified in the Copy Pool for DateTime Shift.
        /// </summary>
        public static string mbx_FrmPasteWhat_NoDateShiftToPaste {
            get {
                return ResourceManager.GetString("mbx_FrmPasteWhat_NoDateShiftToPaste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All dropdown columns must have a non-empty value and also the &quot;if&quot; condition value must not be empty..
        /// </summary>
        public static string mbx_FrmSettings_dgv_CustomRules_ColumnCannotBeEmpty {
            get {
                return ResourceManager.GetString("mbx_FrmSettings_dgv_CustomRules_ColumnCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you pick &quot;Custom&quot; for Outcome then the Custom Outcome column must not be empty. If you close the Settings Form and this isn&apos;t fixed, your row will be deleted..
        /// </summary>
        public static string mbx_FrmSettings_dgv_CustomRules_CustomOutcomeCannotBeEmpty {
            get {
                return ResourceManager.GetString("mbx_FrmSettings_dgv_CustomRules_CustomOutcomeCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting Failed: .
        /// </summary>
        public static string mbx_FrmSettings_ErrorExportFailed {
            get {
                return ResourceManager.GetString("mbx_FrmSettings_ErrorExportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing Failed: .
        /// </summary>
        public static string mbx_FrmSettings_ErrorImportFailed {
            get {
                return ResourceManager.GetString("mbx_FrmSettings_ErrorImportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please restart the app for the change to take place..
        /// </summary>
        public static string mbx_FrmSettings_PleaseRestartApp {
            get {
                return ResourceManager.GetString("mbx_FrmSettings_PleaseRestartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose what to Export. Please note that the Export function exports data that is _in_ the database, or in other words has been saved. If you have pending changes in Settings then back out, save them (click OK in the Settings Form), then come back here..
        /// </summary>
        public static string mbx_FrmSettings_QuestionWhatToExport {
            get {
                return ResourceManager.GetString("mbx_FrmSettings_QuestionWhatToExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose what to Import. Please note that upon successful completion of the Import process the relevant bits of the database will be overwritten. If something fails there will be a backup file of your db in your AppData folder..
        /// </summary>
        public static string mbx_FrmSettings_QuestionWhatToImport {
            get {
                return ResourceManager.GetString("mbx_FrmSettings_QuestionWhatToImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done..
        /// </summary>
        public static string mbx_GenericDone {
            get {
                return ResourceManager.GetString("mbx_GenericDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done - you will probably want to restart the app..
        /// </summary>
        public static string mbx_GenericDoneRestartApp {
            get {
                return ResourceManager.GetString("mbx_GenericDoneRestartApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file path likely contains UTF (non-standard, such as Asian, Cyrillic, etc.) characters and this may cause the error. Please make sure you have enabled the “Use Unicode UTF-8 for worldwide language support” feature. (refer to the Known Issues in the Readme for this).
        /// </summary>
        public static string mbx_GenericPathLikelyUTF {
            get {
                return ResourceManager.GetString("mbx_GenericPathLikelyUTF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to asyncExifTool.ExecuteAsync failed (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_Helper_ErrorAsyncExifToolExecuteAsyncFailed {
            get {
                return ResourceManager.GetString("mbx_Helper_ErrorAsyncExifToolExecuteAsyncFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read default values from SQL (Please file an issue on GitHub): .
        /// </summary>
        public static string mbx_Helper_ErrorCantReadDefaultSQLiteDB {
            get {
                return ResourceManager.GetString("mbx_Helper_ErrorCantReadDefaultSQLiteDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some data has been changed - want to save? 
        ///Data will be discarded if you click No.
        /// </summary>
        public static string mbx_Helper_QuestionFileQIsNotEmpty {
            get {
                return ResourceManager.GetString("mbx_Helper_QuestionFileQIsNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExifToolVerAPIResponse API Returned the following response: .
        /// </summary>
        public static string mbx_Helper_WarningExifToolVerAPIResponse {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningExifToolVerAPIResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your files seem to have disappeared..
        /// </summary>
        public static string mbx_Helper_WarningFileDisappeared {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningFileDisappeared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames API Returned the following response: .
        /// </summary>
        public static string mbx_Helper_WarningGeoNamesAPIResponse {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningGeoNamesAPIResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub API Returned the following response: .
        /// </summary>
        public static string mbx_Helper_WarningGTNVerAPIResponse {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningGTNVerAPIResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ll need to provide an ArcGIS API Key in the Settings for the app to work properly..
        /// </summary>
        public static string mbx_Helper_WarningNoARCGISKey {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningNoARCGISKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s nothing in your write-queue..
        /// </summary>
        public static string mbx_Helper_WarningNothingInWriteQueue {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningNothingInWriteQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing to Paste..
        /// </summary>
        public static string mbx_Helper_WarningNothingToPaste {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningNothingToPaste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve disabled both processing of the original file _and_ the sidecar XMP so there is nothing to write to..
        /// </summary>
        public static string mbx_Helper_WarningNoWriteSettingEnabled {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningNoWriteSettingEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will only work if you have one and only one file selected..
        /// </summary>
        public static string mbx_Helper_WarningTooManyFilesSelected {
            get {
                return ResourceManager.GetString("mbx_Helper_WarningTooManyFilesSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to reach the API - are you offline by any chance?.
        /// </summary>
        public static string mbx_HelperStaticExifNoAPI {
            get {
                return ResourceManager.GetString("mbx_HelperStaticExifNoAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string mns_File {
            get {
                return ResourceManager.GetString("mns_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string mns_Help {
            get {
                return ResourceManager.GetString("mns_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string mns_Settings {
            get {
                return ResourceManager.GetString("mns_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a database file.
        /// </summary>
        public static string ofd_Settings_GetDatabaseFileToImport_SelectDatabaseFile {
            get {
                return ResourceManager.GetString("ofd_Settings_GetDatabaseFileToImport_SelectDatabaseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select GS Favourites export file.
        /// </summary>
        public static string ofd_tmi_File_ImportFavouritesFromGeoSetter_SelectFile {
            get {
                return ResourceManager.GetString("ofd_tmi_File_ImportFavouritesFromGeoSetter_SelectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for Startup Folder.
        /// </summary>
        public static string pbx_Browse_Startup_Folder {
            get {
                return ResourceManager.GetString("pbx_Browse_Startup_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve/generate image preview.
        /// </summary>
        public static string pbx_imagePreviewCouldNotRetrieve {
            get {
                return ResourceManager.GetString("pbx_imagePreviewCouldNotRetrieve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No image to show.
        /// </summary>
        public static string pbx_imagePreviewEmptyText {
            get {
                return ResourceManager.GetString("pbx_imagePreviewEmptyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for Tracks Folder.
        /// </summary>
        public static string pbx_importFromAnotherFolder {
            get {
                return ResourceManager.GetString("pbx_importFromAnotherFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for Tracks File.
        /// </summary>
        public static string pbx_importOneFile {
            get {
                return ResourceManager.GetString("pbx_importOneFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to Fixed Date.
        /// </summary>
        public static string rbt_CreateDateSetToFixedDate {
            get {
                return ResourceManager.GetString("rbt_CreateDateSetToFixedDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Shift.
        /// </summary>
        public static string rbt_CreateDateTimeShift {
            get {
                return ResourceManager.GetString("rbt_CreateDateTimeShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import from another folder.
        /// </summary>
        public static string rbt_importFromAnotherFolder {
            get {
                return ResourceManager.GetString("rbt_importFromAnotherFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import from the current folder.
        /// </summary>
        public static string rbt_importFromCurrentFolder {
            get {
                return ResourceManager.GetString("rbt_importFromCurrentFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import from a chosen file.
        /// </summary>
        public static string rbt_importOneFile {
            get {
                return ResourceManager.GetString("rbt_importOneFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark (Inverse).
        /// </summary>
        public static string rbt_MapColourModeDarkInverse {
            get {
                return ResourceManager.GetString("rbt_MapColourModeDarkInverse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark (Pale).
        /// </summary>
        public static string rbt_MapColourModeDarkPale {
            get {
                return ResourceManager.GetString("rbt_MapColourModeDarkPale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal.
        /// </summary>
        public static string rbt_MapColourModeNormal {
            get {
                return ResourceManager.GetString("rbt_MapColourModeNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual (Fixed values).
        /// </summary>
        public static string rbt_PasteCreateDateActual {
            get {
                return ResourceManager.GetString("rbt_PasteCreateDateActual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Shift.
        /// </summary>
        public static string rbt_PasteCreateDateShift {
            get {
                return ResourceManager.GetString("rbt_PasteCreateDateShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual (Fixed values).
        /// </summary>
        public static string rbt_PasteTakenDateActual {
            get {
                return ResourceManager.GetString("rbt_PasteTakenDateActual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Shift.
        /// </summary>
        public static string rbt_PasteTakenDateShift {
            get {
                return ResourceManager.GetString("rbt_PasteTakenDateShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to Fixed Date.
        /// </summary>
        public static string rbt_TakenDateSetToFixedDate {
            get {
                return ResourceManager.GetString("rbt_TakenDateSetToFixedDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Shift.
        /// </summary>
        public static string rbt_TakenDateTimeShift {
            get {
                return ResourceManager.GetString("rbt_TakenDateTimeShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try to use this language when retrieving location names:.
        /// </summary>
        public static string rbt_TryUseGeoNamesLanguage {
            get {
                return ResourceManager.GetString("rbt_TryUseGeoNamesLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try to use the &quot;local language&quot; when retrieving location names.
        /// </summary>
        public static string rbt_UseGeoNamesLocalLanguage {
            get {
                return ResourceManager.GetString("rbt_UseGeoNamesLocalLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an advanced feature. AdminName1-4 &amp; ToponymName refer to the API outputs so if you don&apos;t understand that, probably don&apos;t poke this at all. 
        ///For an overall rundown, check: https://github.com/nemethviktor/GeoTagNinja/issues/38#issuecomment-1356844255 .
        ///What this Setting does is that you can add your own choices of countries to get the &quot;City&quot; value from one of the specific AdminNames..
        /// </summary>
        public static string rbx_CustomCityLogicExplanation {
            get {
                return ResourceManager.GetString("rbx_CustomCityLogicExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that changes to the table below are immediately affected and the OK/Cancel button has no effect per se on them. You also need to right-click and click Reset Cached Data for any files that may be affected by your changes if you want to pull data within this session (or just restart the app.).
        /// </summary>
        public static string rbx_CustomCityLogicExplanationBold {
            get {
                return ResourceManager.GetString("rbx_CustomCityLogicExplanationBold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an advanced feature. AdminName1-4 &amp; ToponymName refer to the API outputs so if you don&apos;t understand that, probably don&apos;t poke this at all. 
        ///Re: &quot;Predetermined countries&quot; (checkbox below): Read about those here: https://github.com/nemethviktor/GeoTagNinja/issues/38#issuecomment-1356844255 + check the other tab - Note if you disable that setting it then will blank CountryCode cells that fall outside the relevant grouping but won&apos;t actually drop those rows.
        ///All columns are compulsory exc for &quot;Custom&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string rbx_CustomRulesExplanation {
            get {
                return ResourceManager.GetString("rbx_CustomRulesExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that changes to the table below are immediately affected and the OK/Cancel button has no effect per se on them. You also need to right-click and click Reset Cached Data for any files that may be affected by your changes if you want to pull data within this session (or just restart the app.).
        /// </summary>
        public static string rbx_CustomRulesExplanationBold {
            get {
                return ResourceManager.GetString("rbx_CustomRulesExplanationBold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ll need an ArcGIS API key to use the map search functionality. 
        ///ArcGIS have changed their registration process as of June 2024. Register [here](https://location.arcgis.com/sign-up/)
        ///You now need to specify a portal url. Just input anything you want.
        ///Scroll/Go to `Developer credential creator`
        ///Then `New Item`
        ///Then `Developer Credentials`
        ///Pick `API Key` (not OAUth)
        ///Set your expiration date to as far into the future as you can (1 year)
        ///Leave `Referrers` blank
        ///On the next page pick `Geocoding (not  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string rbx_Register_ArcGIS {
            get {
                return ResourceManager.GetString("rbx_Register_ArcGIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ll need a GeoNames Account to use the reverse geocoding/search function (lat/long --&gt; country/city/...). Get one here: http://www.geonames.org/login and then enable &quot;Free Web Services&quot; access here: https://www.geonames.org/manageaccount.
        /// </summary>
        public static string rbx_Register_GeoNames {
            get {
                return ResourceManager.GetString("rbx_Register_GeoNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Data.
        /// </summary>
        public static string tcr_EditData {
            get {
                return ResourceManager.GetString("tcr_EditData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string tmi_File {
            get {
                return ResourceManager.GetString("tmi_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy All Geodata.
        /// </summary>
        public static string tmi_File_CopyGeoData {
            get {
                return ResourceManager.GetString("tmi_File_CopyGeoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Files....
        /// </summary>
        public static string tmi_File_EditFiles {
            get {
                return ResourceManager.GetString("tmi_File_EditFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flat Mode (parse Subfolders).
        /// </summary>
        public static string tmi_File_FlatMode {
            get {
                return ResourceManager.GetString("tmi_File_FlatMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import/Export GPX/JSON Track Files....
        /// </summary>
        public static string tmi_File_ImportExportGPX {
            get {
                return ResourceManager.GetString("tmi_File_ImportExportGPX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Favourites from Geosetter....
        /// </summary>
        public static string tmi_File_ImportFavouritesFromGeoSetter {
            get {
                return ResourceManager.GetString("tmi_File_ImportFavouritesFromGeoSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste All Geodata....
        /// </summary>
        public static string tmi_File_PasteGeoData {
            get {
                return ResourceManager.GetString("tmi_File_PasteGeoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quit.
        /// </summary>
        public static string tmi_File_Quit {
            get {
                return ResourceManager.GetString("tmi_File_Quit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save All.
        /// </summary>
        public static string tmi_File_SaveAll {
            get {
                return ResourceManager.GetString("tmi_File_SaveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string tmi_Help {
            get {
                return ResourceManager.GetString("tmi_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string tmi_Help_About {
            get {
                return ResourceManager.GetString("tmi_Help_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File a bug report (GitHub).
        /// </summary>
        public static string tmi_Help_BugReport {
            get {
                return ResourceManager.GetString("tmi_Help_BugReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File a feature request (GitHub).
        /// </summary>
        public static string tmi_Help_FeedbackFeatureRequest {
            get {
                return ResourceManager.GetString("tmi_Help_FeedbackFeatureRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string tmi_Settings {
            get {
                return ResourceManager.GetString("tmi_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Favourites.
        /// </summary>
        public static string tmi_Settings_Favourites {
            get {
                return ResourceManager.GetString("tmi_Settings_Favourites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string tmi_Settings_Settings {
            get {
                return ResourceManager.GetString("tmi_Settings_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application.
        /// </summary>
        public static string tpg_Application {
            get {
                return ResourceManager.GetString("tpg_Application", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom City Assignment Logic.
        /// </summary>
        public static string tpg_CustomCityLogic {
            get {
                return ResourceManager.GetString("tpg_CustomCityLogic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Rules.
        /// </summary>
        public static string tpg_CustomRules {
            get {
                return ResourceManager.GetString("tpg_CustomRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date &amp; Time.
        /// </summary>
        public static string tpg_DateTime {
            get {
                return ResourceManager.GetString("tpg_DateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exif.
        /// </summary>
        public static string tpg_Exif {
            get {
                return ResourceManager.GetString("tpg_Exif", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Options.
        /// </summary>
        public static string tpg_FileOptions {
            get {
                return ResourceManager.GetString("tpg_FileOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GeoNames Settings.
        /// </summary>
        public static string tpg_GeoNames {
            get {
                return ResourceManager.GetString("tpg_GeoNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Tracks.
        /// </summary>
        public static string tpg_ImportExport_Export {
            get {
                return ResourceManager.GetString("tpg_ImportExport_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import Tracks.
        /// </summary>
        public static string tpg_ImportExport_Import {
            get {
                return ResourceManager.GetString("tpg_ImportExport_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        public static string tpg_Location {
            get {
                return ResourceManager.GetString("tpg_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map.
        /// </summary>
        public static string tpg_Map {
            get {
                return ResourceManager.GetString("tpg_Map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File a bug report (requires a GitHub account).
        /// </summary>
        public static string tsb_BugReport {
            get {
                return ResourceManager.GetString("tsb_BugReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit File.
        /// </summary>
        public static string tsb_EditFile {
            get {
                return ResourceManager.GetString("tsb_EditFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File a feature request (requires a GitHub account).
        /// </summary>
        public static string tsb_FeedbackFeatureRequest {
            get {
                return ResourceManager.GetString("tsb_FeedbackFeatureRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Toponomy &amp; Altitude info for all of the selected files.
        /// </summary>
        public static string tsb_GetAllFromWeb {
            get {
                return ResourceManager.GetString("tsb_GetAllFromWeb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import/Export GPX/JSON Track Files.
        /// </summary>
        public static string tsb_ImportExportGPX {
            get {
                return ResourceManager.GetString("tsb_ImportExportGPX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent Folder.
        /// </summary>
        public static string tsb_OneFolderUp {
            get {
                return ResourceManager.GetString("tsb_OneFolderUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh File List.
        /// </summary>
        public static string tsb_Refresh_lvwFileList {
            get {
                return ResourceManager.GetString("tsb_Refresh_lvwFileList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove All Location Data.
        /// </summary>
        public static string tsb_RemoveGeoData {
            get {
                return ResourceManager.GetString("tsb_RemoveGeoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Files.
        /// </summary>
        public static string tsb_SaveFiles {
            get {
                return ResourceManager.GetString("tsb_SaveFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder Control.
        /// </summary>
        public static string tsr_FolderControl {
            get {
                return ResourceManager.GetString("tsr_FolderControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main.
        /// </summary>
        public static string tsr_MainAppToolStrip {
            get {
                return ResourceManager.GetString("tsr_MainAppToolStrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press CTRL+V to paste a valid pair of decimals to the lat/long placeholders. 
        ///The clipboard should contain only a pair of decimals, preferably in &quot;invariant&quot; (English) setup, which is integer-dot-decimal-comma-integer-dot-decimal, such as 12.345, 56.897
        ///That said the code _should_ be able to comprehend other layouts. Note if the clipboard has anything apart from the above the operation will fail (nothing will happen.).
        /// </summary>
        public static string ttp_GPSDataPaste {
            get {
                return ResourceManager.GetString("ttp_GPSDataPaste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load metadata for the selected file(s) from your Favourites.
        /// </summary>
        public static string ttp_LoadFavourite {
            get {
                return ResourceManager.GetString("ttp_LoadFavourite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save the Current Coordinate to the Selected File(s).
        /// </summary>
        public static string ttp_loctToFile {
            get {
                return ResourceManager.GetString("ttp_loctToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save the Current Coordinate to the Selected Files&apos; Destination.
        /// </summary>
        public static string ttp_loctToFileDestination {
            get {
                return ResourceManager.GetString("ttp_loctToFileDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Favourites.
        /// </summary>
        public static string ttp_ManageFavourites {
            get {
                return ResourceManager.GetString("ttp_ManageFavourites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Put Coordinates of Selected Files onto the Map.
        /// </summary>
        public static string ttp_NavigateMapGo {
            get {
                return ResourceManager.GetString("ttp_NavigateMapGo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Zones are left as blank on open regardless of what the stored value is. There is no Exif Tag for TZ but only &apos;Offset&apos;, which is something like &apos;+01:00&apos;. As there is no indication for neither TZ nor DST per se I can&apos;t ascertain that  &apos;+01:00&apos; was in fact say BST rather than CET, one being DST the other not. Either adjust manually or pull from web - the combination of coordinates + createDate would decisively inform the program of the real TZ value. The value in the read-only textbox will be saved in the [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ttp_OffsetTime {
            get {
                return ResourceManager.GetString("ttp_OffsetTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save (or overwrite) the currently selected file&apos;s metadata to your Favourites.
        /// </summary>
        public static string ttp_SaveFavourite {
            get {
                return ResourceManager.GetString("ttp_SaveFavourite", resourceCulture);
            }
        }
    }
}
